@using System.Globalization;

@{
    int t1 = 0, t2 = 0;
    int TinhTienKhuyenMai(int gia, int khuyenmai)
    {
        double a = (double)khuyenmai;
        double b = (double)gia;
        // Tính tiền sau khuyến mãi
        double tienSauKhuyenMai = b * (1 - a / 100);
        return (int)tienSauKhuyenMai;
    }
    string ConvertToCurrencyFormat(int amount)
    {
        // Sử dụng CultureInfo để định dạng số theo quy tắc của ngôn ngữ hiện tại
        CultureInfo culture = CultureInfo.CurrentCulture;

        // Chuyển đổi số thành chuỗi định dạng tiền tệ
        string formattedAmount = string.Format(culture, "{0:N0}", amount);

        // Thêm ký tự "đ" hoặc "₫" (đồng) vào cuối chuỗi
        formattedAmount += "đ";

        return formattedAmount;
    }
}
<div class="container-xxl py-5">
    <div class="container">
        <div class="text-center mx-auto mb-5 wow fadeInUp" data-wow-delay="0.1s" style="max-width: 600px;">
            <h6 class="section-title bg-white text-center px-3 " style="color:purple">Mỹ Phẩm</h6>
        </div>
        <div class="container-fluid mt-5 mb-5">
            <div class="row">
                @* Show Image *@
                <div class="col-md-6">
                    <div id="carouselExample-cf"
                         class="carousel carousel-dark slide carousel-fade"
                         data-bs-ride="carousel">
                        <ol class="carousel-indicators">
                            @foreach (var item in Model.Images)
                            {
                                if (t1 == 0)
                                {
                                    <li data-bs-target="#carouselExample-cf" data-bs-slide-to="@t1" class="active"></li>
                                }
                                else
                                {
                                    <li data-bs-target="#carouselExample-cf" data-bs-slide-to="@t1"></li>
                                }
                                t1 += 1;
                            }
                        </ol>
                        <div class="carousel-inner">
                            @foreach (var item in Model.Images)
                            {
                                if (t2 == 0)
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100 rounded-1" src="@item.Image" />
                                        <div class="carousel-caption d-none d-md-block">
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img class="d-block w-100 rounded-1" src="@item.Image" />
                                        <div class="carousel-caption d-none d-md-block">
                                        </div>
                                    </div>
                                }
                                t2 = 1;
                            }
                        </div>
                        <a class="carousel-control-prev" href="#carouselExample-cf" role="button" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExample-cf" role="button" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </a>
                    </div>

                </div>



                <div class="col-md-6">
                    <h5 class="start-0">@Model.Product.ProductName</h5>
                    <div class="about text-start">
                        <span class="" style="font-size:18px; font-weight:bold; color:red">@ConvertToCurrencyFormat(TinhTienKhuyenMai((int)Model.Product.SellingPrice,Model.Promotion))</span>
                        <span class="ms-1 text-secondary text-decoration-line-through" style="font-size:14px">@ConvertToCurrencyFormat((int)Model.Product.SellingPrice)</span>
                    </div>
                    <div class="about text-start text-black mt-3">
                        <span class="h6" style=" color:black">Xuất xứ:</span>
                        <span class="ms-1 text-black">@Model.Product.Origin</span>
                    </div>
                    <div class="row mt-2 mx-2">
                        <button class="btn btn-primary">Thêm vào giỏ hàng</button>
                    </div>
                    <h6 class="mt-3">Giới thiệu</h6>
                    <p class="start-0">@Model.Product.Introduction</p>
                    <a id="xemthem"
                       data-bs-toggle="collapse"
                       href="#collapseExample"
                       role="button"
                       aria-expanded="false"
                       aria-controls="collapseExample">
                        Xem thêm
                    </a>
                    <div class="collapse  mt-2" id="collapseExample">
                        <div class="col">
                            <h6>Công dụng</h6>
                            <p class="start-0">@Model.Product.Functionality</p>
                            <h6>Thông tin thêm</h6>
                            <p class="start-0">@Model.Product.Other</p>
                        </div>
                    </div>
                </div>


            </div>

            </div>
        </div>

    </div>
</div>

<!-- / Content -->
@section Scripts {
    <link href="~/DefaultAssets/lib/productstyle/product.min.css" rel="stylesheet" />
    <link href="~/DefaultAssets/lib/productstyle/product.css" rel="stylesheet" />
    <script>
        function LoadListing() {
            $.ajax({
                type: "POST",
                url: "/Admin/Post/GetALL",
                datatype: "json",
                success: function (data) {
                    // Xóa dữ liệu cũ (nếu có)
                    $('#myTable').DataTable().clear().destroy();
                    // Thêm dữ liệu mới
                    $('#myTable').DataTable({
                        data: data,
                        columns: [
                            {
                                data: 'Id',
                                render: function (data, type, row) {
                                    return '<input data-checkbox-id="' + data + '" type="checkbox" />';
                                }
                            },
                            {
                                data: 'Title',
                                render: function (data, type, row) {
                                    // Sử dụng `id` để gán giá link to Detail id
                                    return '<a href="/Admin/Post/Detail/' + row.Id + '">' + data + '</a>';
                                }
                            },
                            { data: 'ViewsCount' },
                            {
                                data: 'PostTypeId',
                                render: function (data, type, row) {
                                    var n = ''; // Khởi tạo n với giá trị rỗng
                                    var other = ''; // Khởi tạo n với giá trị rỗng
                                    $.ajax({
                                        type: "POST",
                                        url: "/Admin/Post/GetPostType",
                                        datatype: "json",
                                        data: { id: data },
                                        async: false, // Đặt thành true nếu bạn muốn sử dụng callback hoặc Promise
                                        success: function (data1) {
                                            n = data1.TypeName;
                                            other = data1.Other;
                                        }
                                    });
                                    return '<p class="d-flex my-auto" title="' + other + '">' + n + '</p>';
                                }
                            },
                        ],
                    });
                }
            });
        }
        $(document).ready(function () {
            // Mảng để lưu trữ giá trị của các checkbox đã được chọn
            var selectedValues = [];

            // Lắng nghe sự kiện thay đổi của checkbox
            $('input[name="selectedProductTypes"]').change(function () {
                // Xóa tất cả các phần tử khỏi mảng
                selectedValues = [];

                // Lặp qua tất cả các checkbox đã được chọn và thêm giá trị vào mảng
                $('input[name="selectedProductTypes"]:checked').each(function () {
                    selectedValues.push(parseInt($(this).val()));
                });

                // Sử dụng ajax để load lại mỹ phẩm
                alert(selectedValues);
            });
            let n = 0
            $("#xemthem").click(function () {
                // Toggle the collapse state
                if (n == 0) {
                    $("#xemthem").text("Thu nhỏ");
                    n = 1;
                }
                else {
                    n = 0;
                    $("#xemthem").text("Xem thêm");
                }
            });
        });


    </script>
}
